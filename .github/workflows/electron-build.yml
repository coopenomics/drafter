name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Electron App
        run: pnpm build:electron

      - name: Prepare artifact name
        id: prepare_artifact
        run: |
          APP_VERSION=$(node -p "require('./package.json').version")
          APP_NAME=$(node -p "require('./package.json').name")
          PLATFORM=""

          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            PLATFORM="windows"
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            PLATFORM="macos"
          else
            PLATFORM="linux"
          fi

          echo "ARTIFACT_NAME=${APP_NAME}-${PLATFORM}-${APP_VERSION}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepare_artifact.outputs.ARTIFACT_NAME }}
          path: dist/electron/*
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
